#!/bin/bash

# Check Docker Compose YML, this file is mandatory to build and up all services
if [[ ! -e docker-compose.yml ]]; then
    echo "Missing docker-compose.yml"
    exit
fi

function help {

    echo ""
    echo "# [Build HELP] **********************************************************************"
    echo "# Use:"
    echo "# ./build -u <service_name> - To uniq build service"
    echo "# ./build -a                - To automatic build services"
    echo "# ./build -i                - To interactive build services(service by service: one by one)"
    echo "# -----------------------------------------------------------------------------------"
    echo ""

    exit
}

function uniq {

    echo "[ UNIQ BUILD ]"
    docker-compose stop ${CMD2}
    docker-compose build ${NO_CACHE} ${CMD2}

}

function automatic {

    echo "[ AUTOMATIC BUILD ]"
    docker-compose stop
    docker-compose build ${NO_CACHE}

}

function interactive {

    echo "[ INTERACTIVE BUILD ]"
    SERVICES_ARRAY=('"'$(echo $SERVICES)'"')

    for ((i = 0; i < ${#SERVICES_ARRAY[@]}; i++)); do
        SERVICE=$(echo "${SERVICES_ARRAY[$i]}" | sed -e 's/"//g')

        echo "-----------------------------------------------------------------------------"
        echo "Build ${SERVICE} now, please type yes/no and press [Enter] ?"
        read OPSERVICE

        if [[ $OPSERVICE == "yes" ]]; then

            echo "Do you want make a login on docker hub for ${SERVICE} ?"
            echo "Please type yes/no and press [Enter] ?"
            read OPLOGIN

            if [[ $OPLOGIN == "yes" ]]; then
                docker login
                DOCKER_LOGIN=1
            fi

            echo "Please Wait, WORKING ON >>>> [${SERVICE}]"
            docker-compose stop ${SERVICE}
            docker-compose build ${NO_CACHE} ${SERVICE}
        else
            echo "Skipping..."
        fi

    done

}

CMD1=$1
CMD2=$2
SERVICES=""
DOCKER_LOGIN=""
NO_CACHE=""

# CHECK-IN

if [[ $CMD1 != "-h" && $CMD1 != "-u" && $CMD1 != "-i" && $CMD1 != "-a" ]]; then
    echo "[ERROR] Invalid command to build services, use ./build -h to help"
    exit
fi

if [[ $CMD1 == '-h' ]]; then
    help
fi

if [[ $CMD1 == '-u' ]]; then
    if [[ ! $CMD2 || $CMD2 == '' ]]; then
        echo "[ERROR] Missing service name to uniq service build..."
        exit
    fi
fi

# PREPARE

if [[ $CMD1 == '-i' ]]; then
    SERVICES=$(grep "container_name" "docker-compose.yml" | cut -d ":" -f2 | sed -r 's/ //g')
fi

echo ""
echo "---------------------------------------------------------------------------------"
echo "Set --no-cache to create a new container ?"
echo "Please type yes or no and Press [Enter]: "
read  OPCACHE
echo ""

if [[ $OPCACHE == "yes" ]]; then
    NO_CACHE="--no-cache"
fi

# RUN

if [[ $CMD1 == "-u" ]]; then
    uniq
fi

if [[ $CMD1 == '-a' ]]; then
    # [DOCKER LOGIN]
    echo ""
    echo "------------------------------------------------------------------------------"
    echo "[NOTE] The login on docker hub is mandatory to private docker images, so if you"
    echo "want use the private images make a login bellow ! Keep calm this operation is"
    echo "not visible on current or others process..."
    echo "------------------------------------------------------------------------------"
    echo "Do you want make Login on Docker Hub ?"
    echo ""
    echo "Please type yes or no and Press [Enter]: "
    read  OP

    if [[ $OP == "yes" ]]; then
        docker login
        DOCKER_LOGIN=1
    fi
    echo "------------------------------------------------------------------------------"

    automatic
fi

if [[ $CMD1 == "-i" ]]; then
    interactive
fi

# [DOCKER LOGOUT]
if [[ ${DOCKER_LOGIN} == 1 ]]; then
    echo "-----------------------------------------------------------------------------"
    echo "DOCKER LOGOUT..."
    docker logout
    echo "-----------------------------------------------------------------------------"
fi

echo "Builder Finished"
exit
